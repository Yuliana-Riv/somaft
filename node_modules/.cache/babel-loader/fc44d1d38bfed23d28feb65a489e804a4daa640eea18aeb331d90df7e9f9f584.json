{"ast":null,"code":"import { mapActions } from \"vuex\";\nimport { url } from '../../global/index';\nexport default {\n  name: \"EditClb\",\n  data() {\n    return {\n      status: \"\",\n      message: \"\",\n      status2: \"\",\n      message2: \"\",\n      active: false,\n      pass: \"\",\n      passc: \"\",\n      archivo: \"No se eligió archivo\",\n      statusimg: false,\n      //MODAL\n      file1: null,\n      viewModal: false,\n      mostrar: false\n    };\n  },\n  async created() {\n    await this.getIdentity();\n    const data = await this.getInfoByIdClb({\n      id: this.identity.sub,\n      option: \"colaborador\"\n    });\n    this.setAddedClb(data);\n    const result = await this.status_img(this.added.image);\n  },\n  computed: {\n    added() {\n      return this.$store.getters[\"colaborador/getAdded\"];\n    },\n    data() {\n      return this.$store.getters[\"colaborador/data\"];\n    },\n    identity() {\n      return this.$store.getters[\"admin/getIdentity\"];\n    }\n  },\n  methods: {\n    ...mapActions(\"colaborador\", [\"setAddedClb\"]),\n    ...mapActions(\"colaborador\", [\"setHistoryOptionClb\"]),\n    wait: function () {\n      setTimeout(() => this.$router.go(), 200);\n    },\n    getIdentity: async function () {\n      let response = await this.$store.dispatch(\"admin/getData\");\n      return response;\n    },\n    ...mapActions(\"colaborador\", [\"getInfoByIdClb\"]),\n    submit: async function (name, lastname, email, phone, pass, passc, wlink) {\n      this.status = \"\";\n      this.message = \"\";\n      if (pass === passc) {\n        let result = await this.$store.dispatch(\"colaborador/editItemClb\", {\n          option: \"colaborador\",\n          item: {\n            id: this.added.id,\n            name,\n            lastname,\n            email,\n            phone,\n            pass,\n            passc,\n            wlink\n          }\n        });\n        if (result.status == \"error\") {\n          this.status = \"error\";\n          this.message = result.message;\n        } else {\n          // success\n          this.showModal();\n        }\n      } else {\n        this.status = \"error\";\n        this.message = \"Las contraseñas no coinciden.\";\n      }\n    },\n    mostrarPass: function () {\n      var tipo = document.getElementById(\"pass\");\n      if (tipo.type == \"password\") {\n        tipo.type = \"text\";\n        this.mostrar = false;\n      } else {\n        tipo.type = \"password\";\n        this.mostrar = true;\n      }\n    },\n    closeSelect() {\n      this.active = false;\n      document.getElementById(\"select-ch\").checked = false;\n    },\n    submitImg: async function (image) {\n      this.status = \"\";\n      this.msg = \"\";\n      if (image != null) {\n        if (image.size > 5000000) {\n          this.status2 = \"error\";\n          this.message2 = \"La imagen excede el tamaño maximo permitido de 1MB.\";\n          this.delStatus();\n        } else {\n          //Creamos el formData\n          var data = new FormData();\n          //Añadimos la imagen seleccionada\n          data.append(\"image\", image);\n          //Añadimos el método PUT dentro del formData\n          // Como lo hacíamos desde un formulario simple _(no ajax)_\n          data.append(\"_method\", \"PUT\");\n          //Enviamos la petición\n          let result = await this.$store.dispatch(\"main/editImage\", {\n            id: this.added.id,\n            item: data,\n            option: \"colaborador\"\n          });\n          //  console.log(result);\n\n          if (result.status == \"error\") {\n            this.status2 = \"error\";\n            this.message2 = result.message;\n            this.delStatus();\n          } else {\n            // success\n            this.showModal();\n          }\n        }\n      } else {\n        this.status2 = \"error\";\n        this.message2 = \"Imagen no subida.\";\n        this.delStatus();\n      }\n    },\n    delStatus: function () {\n      setTimeout(() => this.delMsgs(), 2000);\n    },\n    delMsgs: function () {\n      this.status = \"\";\n      this.message = \"\";\n      this.status2 = \"\";\n      this.message2 = \"\";\n    },\n    showModal: function () {\n      this.viewModal = true;\n    },\n    closeModal: function () {\n      this.viewModal = false;\n      this.setAddedClb(\"\");\n      this.setHistoryOptionClb(\"Default\");\n    },\n    Edit: function () {\n      this.viewModal = false;\n    },\n    back: function () {\n      setTimeout(() => this.$router.go(), 200);\n    },\n    previewFiles(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      this.file1 = files[0];\n      this.archivo = this.file1.name;\n    },\n    srcImg: function (img) {\n      console.log(img);\n      if (!img || img == '') {\n        this.statusimg = false;\n        return '';\n      }\n      let src = `${url}/colaborador-img/${img}`;\n      return src;\n    },\n    status_img: async function (img) {\n      if (!img || img == '') {\n        this.statusimg = false;\n        return '';\n      }\n      this.statusimg = false;\n      let payload = {\n        option: 'colaborador',\n        image: img\n      };\n      let response = '';\n      try {\n        response = await this.$store.dispatch(\"main/getStatusImage\", payload);\n        if (!response?.data?.status) {\n          this.statusimg = true;\n        } else {\n          response = '';\n        }\n      } catch (err) {\n        //console.log(err)\n      }\n      return response;\n    }\n  }\n};","map":{"version":3,"mappings":"AAmNA;AACA;AACA;EACAA;EAEAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACA;MACAC;MACAC;MACAC;IACA;EACA;EACA;IACA;IAEA;MACAC;MACAC;IACA;IAEA;IAEA;EACA;EACAC;IACAC;MACA;IACA;IACAhB;MACA;IACA;IACAiB;MACA;IACA;EACA;EACAC;IACA;IACA;IACAC;MACAC;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;QAGA;UACAR;UACAS;YAAAV;YAAAd;YAAAyB;YAAAC;YAAAC;YAAApB;YAAAC;YAAAoB;UAAA;QACA;QAEA;UACA;UACA;QACA;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;MACA;QACAC;QACA;MACA;QACAA;QACA;MACA;IACA;IACAC;MACA;MACAC;IACA;IACAC;MACA;MACA;MAEA;QACA;UACA;UACA;UACA;QACA;UACA;UACA;UACA;UACAhC;UACA;UACA;UACAA;UACA;UACA;YACAa;YACAU;YACAT;UACA;UACA;;UAEA;YACA;YACA;YACA;UACA;YACA;YACA;UACA;QACA;MACA;QACA;QACA;QACA;MACA;IACA;IAEAmB;MACAb;IACA;IACAc;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACAlB;IACA;IAEAmB;MACA;MACA;MACA;MACA;IACA;IAEAC;MACAC;MACA;QACA;QACA;MACA;MACA;MAGA;IACA;IAEAC;MACA;QACA;QACA;MACA;MAEA;MACA;QACA5B;QACA6B;MACA;MACA;MAEA;QACAC;QAEA;UACA;QACA;UACAA;QACA;MACA;QACA;MAAA;MAGA;IAEA;EACA;AACA","names":["name","data","status","message","status2","message2","active","pass","passc","archivo","statusimg","file1","viewModal","mostrar","id","option","computed","added","identity","methods","wait","setTimeout","getIdentity","submit","item","lastname","email","phone","wlink","mostrarPass","tipo","closeSelect","document","submitImg","delStatus","delMsgs","showModal","closeModal","Edit","back","previewFiles","srcImg","console","status_img","image","response"],"sourceRoot":"src/views/colaboradores","sources":["miPerfil.vue"],"sourcesContent":["<template >\r\n  <div id=\"EditClb\">\r\n    <div class=\"form-content\">\r\n      <form\r\n        @submit.prevent=\"\r\n          submit(\r\n            added.name,\r\n            added.lastname,\r\n           \r\n            added.email,\r\n            added.phone,\r\n            pass,\r\n            passc,\r\n            added.wlink\r\n          )\r\n        \"\r\n      >\r\n        <div class=\"grup-form dflx\">\r\n          <div class=\"boxform\">\r\n            <label for=\"name\" class=\"name\">Nombre </label>\r\n            <input\r\n              v-model=\"added.name\"\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              pattern=\"[a-zA-ZñÑáéíóúÁÉÍÓÚ0-9\\s]{2,254}\"\r\n              required\r\n              class=\"in1\"\r\n            />\r\n          </div>\r\n          <div class=\"boxform\">\r\n            <label for=\"lastname\" class=\"lastname\">Apellido/s</label>\r\n            <input\r\n              v-model=\"added.lastname\"\r\n              type=\"text\"\r\n              id=\"lastname\"\r\n              name=\"lastname\"\r\n              pattern=\"[a-zA-ZñÑáéíóúÁÉÍÓÚ0-9\\s]{2,254}\"\r\n              required\r\n              class=\"in1\"\r\n            />\r\n          </div>\r\n       \r\n        </div>\r\n\r\n        <div class=\"grup-form dflx\">\r\n          <div class=\"boxform\">\r\n            <label for=\"phone\" class=\"phone\">Teléfono</label>\r\n            <input\r\n              v-model=\"added.phone\"\r\n              type=\"text\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              minlength=\"10\"\r\n              maxlength=\"10\"\r\n              size=\"10\"\r\n              pattern=\"\\d*\"\r\n              required\r\n              class=\"in1\"\r\n            />\r\n          </div>\r\n          <div class=\"boxform\">\r\n            <label for=\"email\" class=\"email\">E-mail</label>\r\n            <input\r\n              v-model=\"added.email\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              required\r\n              class=\"in1\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"grup-form dflx\">\r\n          <div class=\"boxform\">\r\n            <label for=\"wlink\" class=\"wlink\">Whatsapp Link</label>\r\n            <input\r\n              v-model=\"added.wlink\"\r\n              type=\"text\"\r\n              id=\"wlink\"\r\n              name=\"wlink\"\r\n           \r\n              required\r\n            />\r\n          </div>\r\n         \r\n        </div>\r\n        \r\n        <p class=\"chpass\">*Solo si deseas cambiar la contraseña.</p>\r\n        <div class=\"grup-form dflx\">\r\n          <div class=\"boxform\">\r\n            <label for=\"pass\" class=\"pass\">Contraseña</label>\r\n            <div class=\"dflx pass-cont\">\r\n              <input\r\n                v-model=\"pass\"\r\n                type=\"password\"\r\n                id=\"pass\"\r\n                name=\"pass\"\r\n                minlength=\"8\"\r\n                class=\"in5\"\r\n              />\r\n                <div class=\"bx_pss_img\">\r\n                  <img\r\n                    v-if=\"mostrar\"\r\n                    @click=\"mostrarPass()\"\r\n                    src=\"../../assets/login/NoMostrar.svg\"\r\n                    alt=\"\"\r\n                  />\r\n                  <img\r\n                    v-else\r\n                    @click=\"mostrarPass()\"\r\n                    src=\"../../assets/login/Mostrar.svg\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>              \r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"boxform\">\r\n            <label for=\"passc\" class=\"passc\">Confirmar Contraseña</label>\r\n            <input\r\n              v-model=\"passc\"\r\n              type=\"password\"\r\n              id=\"passc\"\r\n              name=\"passc\"\r\n              minlength=\"8\"\r\n              class=\"in5\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"dflx\">\r\n         \r\n          <button class=\"alta\" type=\"submit\">Editar</button>\r\n        </div>\r\n\r\n        <div v-if=\"status != ''\" class=\"status_messages\">\r\n          <div v-if=\"status == 'success'\" class=\"msg msg_success\">\r\n            <p>{{ message }}</p>\r\n          </div>\r\n          <div v-if=\"status == 'error'\" class=\"msg msg_error\">\r\n            <p>{{ message }}</p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <hr class=\"hrhd\" />\r\n\r\n    <div class=\"form-img\">\r\n      <div class=\"grup-form dflx\">\r\n        <div class=\"boxform\">\r\n          <label>Imagen</label>\r\n          <div class=\"dflx\">\r\n            <label class=\"filelabel\" for=\"uploadimg\">\r\n              <span>Seleccionar Archivo</span></label\r\n            >\r\n            <label class=\"filelabelname tbl_item\" for=\"uploadimg\">\r\n              {{ archivo }}</label\r\n            >\r\n          </div>\r\n\r\n          <input\r\n            @change=\"previewFiles\"\r\n            type=\"file\"\r\n            id=\"uploadimg\"\r\n            name=\"uploadimg\"\r\n            required\r\n            class=\"fileinput\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"dflx\">\r\n        <div @click=\"submitImg(file1)\" class=\"btn_añadir2 dflx\">\r\n          <p>AGREGAR <span> IMAGEN</span></p>\r\n          <img src=\"../../assets/default/upload.png\" alt=\"\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"status2 != ''\" class=\"status_messages\">\r\n        <div v-if=\"status2 == 'success'\" class=\"msg msg_success\">\r\n          <p>{{ message2 }}</p>\r\n        </div>\r\n        <div v-if=\"status2 == 'error'\" class=\"msg msg_error\">\r\n          <p>{{ message2 }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"div-user\">\r\n  <img class=\"logo\" v-if=\"statusimg\" :src=\"srcImg(added.image)\" alt=\"\">\r\n</div>\r\n\r\n    <div v-if=\"viewModal\" class=\"modal_view\">\r\n      <div id=\"modal_edit\">\r\n        <div class=\"body dflx\">\r\n          <h3>Colaborador actualizado</h3>\r\n          <img src=\"../../assets/default/add.png\" alt=\"icono alerta\" />\r\n        </div>\r\n\r\n        <div class=\"modal_edit_btns dflx\">\r\n          <p @click=\"wait()\" class=\"otro\">Aceptar</p>\r\n          <!-- <p  @click=\"back()\" class=\"inicio\">Inicio</p>-->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nimport {url} from '../../global/index'; \r\nexport default {\r\n  name: \"EditClb\",\r\n\r\n  data() {\r\n    return {\r\n      status: \"\",\r\n      message: \"\",\r\n      status2: \"\",\r\n      message2: \"\",\r\n      active: false,\r\n      pass: \"\",\r\n      passc: \"\",\r\n      archivo: \"No se eligió archivo\",\r\n   statusimg:false,\r\n      //MODAL\r\n      file1: null,\r\n      viewModal: false,\r\n      mostrar:false,\r\n    };\r\n  },\r\n  async created() {\r\n    await this.getIdentity()\r\n    \r\n   const data = await this.getInfoByIdClb({\r\n      id: this.identity.sub,\r\n      option: \"colaborador\",\r\n    });\r\n\r\n    this.setAddedClb(data)\r\n\r\n       const result = await this.status_img(this.added.image)  \r\n  },\r\n  computed: {\r\n    added() {\r\n      return this.$store.getters[\"colaborador/getAdded\"];\r\n    },\r\n    data() {\r\n      return this.$store.getters[\"colaborador/data\"];\r\n    },\r\n    identity() {\r\n      return this.$store.getters[\"admin/getIdentity\"];\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions(\"colaborador\", [\"setAddedClb\"]),\r\n    ...mapActions(\"colaborador\", [\"setHistoryOptionClb\"]),\r\n    wait: function () {\r\n      setTimeout(() => this.$router.go(), 200);\r\n    },\r\n    getIdentity: async function () {\r\n      let response = await this.$store.dispatch(\"admin/getData\");\r\n      return response;\r\n    },\r\n    ...mapActions(\"colaborador\", [\"getInfoByIdClb\"]),\r\n    submit: async function (name, lastname, email, phone, pass, passc, wlink) {\r\n      this.status = \"\";\r\n      this.message = \"\";\r\n      if (pass === passc) {\r\n       \r\n\r\n        let result = await this.$store.dispatch(\"colaborador/editItemClb\", {\r\n          option: \"colaborador\",\r\n          item: { id: this.added.id, name, lastname, email, phone, pass, passc, wlink},\r\n        });\r\n\r\n        if (result.status == \"error\") {\r\n          this.status = \"error\";\r\n          this.message = result.message;\r\n        } else {\r\n          // success\r\n          this.showModal();\r\n        }\r\n      } else {\r\n        this.status = \"error\";\r\n        this.message = \"Las contraseñas no coinciden.\";\r\n      }\r\n    },\r\n    mostrarPass: function () {\r\n      var tipo = document.getElementById(\"pass\");\r\n      if (tipo.type == \"password\") {\r\n        tipo.type = \"text\";\r\n        this.mostrar = false;\r\n      } else {\r\n        tipo.type = \"password\";\r\n        this.mostrar = true;\r\n      }\r\n    },\r\n    closeSelect() {\r\n      this.active = false;\r\n      document.getElementById(\"select-ch\").checked = false;\r\n    },\r\n    submitImg: async function (image) {\r\n      this.status = \"\";\r\n      this.msg = \"\";\r\n\r\n      if (image != null) {\r\n        if (image.size > 5000000) {\r\n          this.status2 = \"error\";\r\n          this.message2 = \"La imagen excede el tamaño maximo permitido de 1MB.\";\r\n          this.delStatus();\r\n        } else {\r\n          //Creamos el formData\r\n          var data = new FormData();\r\n          //Añadimos la imagen seleccionada\r\n          data.append(\"image\", image);\r\n          //Añadimos el método PUT dentro del formData\r\n          // Como lo hacíamos desde un formulario simple _(no ajax)_\r\n          data.append(\"_method\", \"PUT\");\r\n          //Enviamos la petición\r\n          let result = await this.$store.dispatch(\"main/editImage\", {\r\n            id: this.added.id,\r\n            item: data,\r\n            option: \"colaborador\",\r\n          });\r\n        //  console.log(result);\r\n\r\n          if (result.status == \"error\") {\r\n            this.status2 = \"error\";\r\n            this.message2 = result.message;\r\n            this.delStatus();\r\n          } else {\r\n            // success\r\n            this.showModal();\r\n          }\r\n        }\r\n      } else {\r\n        this.status2 = \"error\";\r\n        this.message2 = \"Imagen no subida.\";\r\n        this.delStatus();\r\n      }\r\n    },\r\n\r\n    delStatus: function () {\r\n      setTimeout(() => this.delMsgs(), 2000);\r\n    },\r\n    delMsgs: function () {\r\n      this.status = \"\";\r\n      this.message = \"\";\r\n      this.status2 = \"\";\r\n      this.message2 = \"\";\r\n    },\r\n\r\n    showModal: function () {\r\n      this.viewModal = true;\r\n    },\r\n    closeModal: function () {\r\n      this.viewModal = false;\r\n      this.setAddedClb(\"\");\r\n      this.setHistoryOptionClb(\"Default\");\r\n    },\r\n    Edit: function () {\r\n      this.viewModal = false;\r\n    },\r\n    back: function () {\r\n      setTimeout(() => this.$router.go(), 200);\r\n    },\r\n\r\n    previewFiles(e) {\r\n      var files = e.target.files || e.dataTransfer.files;\r\n      if (!files.length) return;\r\n      this.file1 = files[0];\r\n      this.archivo = this.file1.name;\r\n    },\r\n\r\n     srcImg:   function (img){\r\n      console.log(img)\r\n         if(!img || img =='') {\r\n                this.statusimg =false\r\n                return ''\r\n            }\r\n                let src = `${url}/colaborador-img/${img}`\r\n                \r\n    \r\n                return src\r\n        },\r\n\r\n        status_img:async  function (img){\r\n       if(!img || img =='') {\r\n                this.statusimg =false\r\n                return ''\r\n            }\r\n\r\n      this.statusimg =false;\r\n                 let payload ={\r\n                    option:'colaborador',\r\n                    image:img\r\n                }\r\n                let response  =''\r\n\r\n                try{\r\n                     response =  await this.$store.dispatch(\"main/getStatusImage\", payload);\r\n                  \r\n                      if(!response?.data?.status){\r\n                       this.statusimg =true\r\n                      }else{\r\n                        response = ''\r\n                      }\r\n                }catch(err){\r\n                    //console.log(err)\r\n                }\r\n\r\n                return response\r\n               \r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.pass-cont {\r\n  position: relative;\r\n  align-items: center;\r\n}\r\n.bx_pss_img {\r\n    position: absolute;\r\n    right: 0;\r\n}\r\n#EditClb label {\r\n  color: var(--color-2);\r\n  font-weight: 700;\r\n  font-size: 0.7291666666666666vw;\r\n  margin-bottom: 0.3vw;\r\n}\r\n\r\n#EditClb input,\r\n#EditClb select {\r\n  height: 2.5vw;\r\n  width: 14.716666666666668vw;\r\n  border: 0.052083vw solid var(--color-2);\r\n  border-radius: 0vw 1.5vw 1.5vw 0vw;\r\n  color: var(--color-3);\r\n  font-size: 0.7291666666666666vw;\r\n  font-weight: 500;\r\n  padding-left: 1.09375vw;\r\n}\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}